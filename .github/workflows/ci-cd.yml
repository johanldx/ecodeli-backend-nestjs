name: CI/CD Pipeline

on:
  push:
    branches: [stage]
  pull_request:
    branches: [stage]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  NETWORK_NAME: ecodeli-net

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Recréer le fichier .env depuis le secret GitHub
        run: |
          echo "${{ secrets.ENV_FILE_STAGE }}" > .env
          echo "[INFO] Fichier .env généré :"
          cat .env

      - name: Installer les dépendances
        run: npm ci

      - name: Construire le projet
        run: npm run build

      - name: Se connecter au GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Construire et pousser l'image Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

      - name: Déployer uniquement le backend
        run: |
          echo "[INFO] Redéploiement du conteneur backend uniquement"

          docker stop ecodeli-backend || true
          docker rm ecodeli-backend || true

          docker run -d \
            --name ecodeli-backend \
            --env-file .env \
            --network ${{ env.NETWORK_NAME }} \
            -p 3000:3000 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

          echo "[INFO] Conteneurs actifs"
          docker ps
